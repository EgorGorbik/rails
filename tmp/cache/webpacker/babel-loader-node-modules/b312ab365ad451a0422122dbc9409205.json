{"ast":null,"code":"var _jsxFileName = \"/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/App.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport Video from \"./Components/Video\";\nimport './shared/styles/index.css';\nimport CommentInput from \"./Components/CommentInput/index\";\nimport Comments from \"./Components/Comments\";\nimport { highlightArea, cleanCanvas } from \"./shared\";\nimport nanoid from 'nanoid';\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      changeComments = _useState2[1];\n\n  var _useState3 = useState('play'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      player = _useState4[0],\n      setPlayer = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timePassed = _useState6[0],\n      setTimePassed = _useState6[1];\n\n  var _useState7 = useState('disable_area_selection'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isAbilityHighlight = _useState8[0],\n      changeAbilityHighlight = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      coordinates = _useState10[0],\n      changeCoordinates = _useState10[1];\n\n  var video = React.createRef(); // get data from local json\n\n  useEffect(function () {\n    fetch('./api/index.json').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return changeComments(data);\n    });\n  }, []);\n\n  var rewindVideo = function rewindVideo(time, data) {\n    cleanCanvas();\n\n    if (data && data.highlight) {\n      data.highlight.map(function (e) {\n        return highlightArea(e);\n      });\n      pausePlayer();\n    }\n\n    video.current.currentTime = time;\n  };\n\n  var addComment = function addComment(myComment) {\n    myComment.id = nanoid(8);\n    myComment.timeStamp = timePassed;\n    changeComments([].concat(_toConsumableArray(comments), [myComment]));\n  };\n\n  var deleteComment = function deleteComment(myComment) {\n    var newComments = comments.filter(function (e) {\n      return e.id !== myComment.id;\n    });\n    changeComments(newComments);\n  };\n\n  var pausePlayer = function pausePlayer() {\n    setPlayer('play');\n    video.current.pause();\n  }; // adjust video playback\n\n\n  var changePlayer = function changePlayer() {\n    switch (player) {\n      case 'play':\n        setPlayer('pause');\n        video.current.play();\n        cleanCanvas();\n        break;\n\n      case 'pause':\n        setPlayer('play');\n        video.current.pause();\n        break;\n\n      default:\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main_content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Video, {\n    timePassed: timePassed,\n    setTimePassed: setTimePassed,\n    ref: video,\n    comments: comments,\n    player: player,\n    changePlayer: changePlayer,\n    pausePlayer: pausePlayer,\n    isAbilityHighlight: isAbilityHighlight,\n    changeCoordinates: changeCoordinates,\n    coordinates: coordinates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(CommentInput, {\n    player: player,\n    changePlayer: changePlayer,\n    addComment: addComment,\n    isAbilityHighlight: isAbilityHighlight,\n    changeAbilityHighlight: changeAbilityHighlight,\n    coordinates: coordinates,\n    changeCoordinates: changeCoordinates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Comments, {\n    deleteComment: deleteComment,\n    rewindVideo: rewindVideo,\n    comments: comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/App.js"],"names":["React","useEffect","useState","Video","CommentInput","Comments","highlightArea","cleanCanvas","nanoid","App","comments","changeComments","player","setPlayer","timePassed","setTimePassed","isAbilityHighlight","changeAbilityHighlight","coordinates","changeCoordinates","video","createRef","fetch","then","response","json","data","rewindVideo","time","highlight","map","e","pausePlayer","current","currentTime","addComment","myComment","id","timeStamp","deleteComment","newComments","filter","pause","changePlayer","play"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Video from \"./Components/Video\";\nimport './shared/styles/index.css';\nimport CommentInput from \"./Components/CommentInput/index\";\nimport Comments from \"./Components/Comments\";\nimport {highlightArea, cleanCanvas} from \"./shared\";\nimport nanoid from 'nanoid'\n\nfunction App() {\n    const [ comments, changeComments ] = useState([]);\n    const [ player, setPlayer ] = useState('play');\n    const [ timePassed, setTimePassed ] = useState(0);\n    const [ isAbilityHighlight, changeAbilityHighlight ] = useState('disable_area_selection');\n    const [ coordinates, changeCoordinates ] = useState([]);\n\n    const video = React.createRef();\n\n    // get data from local json\n    useEffect(() => {\n        fetch('./api/index.json')\n            .then(response => response.json())\n            .then(data => changeComments(data))\n    }, []);\n\n    const rewindVideo = (time, data) => {\n        cleanCanvas();\n        if(data && data.highlight) {\n            data.highlight.map(e => highlightArea(e));\n            pausePlayer();\n        }\n        video.current.currentTime = time;\n    };\n\n    const addComment = (myComment) => {\n        myComment.id = nanoid(8);\n        myComment.timeStamp = timePassed;\n        changeComments([...comments, myComment])\n    };\n\n    const deleteComment = (myComment) => {\n        let newComments = comments.filter(e => e.id !== myComment.id);\n        changeComments(newComments)\n    };\n\n    const pausePlayer = () => {\n        setPlayer('play');\n        video.current.pause();\n    };\n\n    // adjust video playback\n    const changePlayer = () => {\n        switch (player) {\n            case 'play':\n                setPlayer('pause');\n                video.current.play();\n                cleanCanvas();\n                break;\n            case 'pause':\n                setPlayer('play');\n                video.current.pause();\n                break;\n            default:\n        }\n    };\n\n    return (\n        <div className='main'>\n            <div className='main_content'>\n                <Video\n                    timePassed={timePassed}\n                    setTimePassed={setTimePassed}\n                    ref={video}\n                    comments={comments}\n                    player={player}\n                    changePlayer={changePlayer}\n                    pausePlayer={pausePlayer}\n                    isAbilityHighlight={isAbilityHighlight}\n                    changeCoordinates={changeCoordinates}\n                    coordinates={coordinates}\n                />\n                <CommentInput\n                    player={player}\n                    changePlayer={changePlayer}\n                    addComment={addComment}\n                    isAbilityHighlight={isAbilityHighlight}\n                    changeAbilityHighlight={changeAbilityHighlight}\n                    coordinates={coordinates}\n                    changeCoordinates={changeCoordinates}\n                />\n            </div>\n            <Comments\n                deleteComment={deleteComment}\n                rewindVideo={rewindVideo}\n                comments={comments}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}