{"ast":null,"code":"var _jsxFileName = \"/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/Components/CommentInput/index.jsx\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport { Icon } from \"semantic-ui-react\";\nimport './style.css';\n\nfunction CommentInput(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      changeComment = _useState2[1];\n\n  var _useState3 = useState('disable'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      buttonStyle = _useState4[0],\n      changeButtonStyle = _useState4[1]; // depending on the contents of the input, add or remove the ability to send\n\n\n  useEffect(function () {\n    if (comment) {\n      changeButtonStyle('able');\n    } else {\n      changeButtonStyle('disable');\n    }\n  }, [comment]);\n\n  var addComment = function addComment() {\n    if (!comment) return;\n\n    if (props.coordinates[0]) {\n      // if the comment has a selection\n      props.addComment({\n        name: 'me',\n        comment: comment,\n        timeStamp: \"40\",\n        highlight: props.coordinates\n      });\n      props.changeCoordinates([]);\n    } else {\n      props.addComment({\n        name: 'me',\n        comment: comment,\n        timeStamp: \"40\"\n      });\n    }\n\n    changeComment('');\n  }; // change the state of the selection icon depending on the click\n\n\n  var changeAbilityHighlight = function changeAbilityHighlight() {\n    if (props.isAbilityHighlight === 'disable_area_selection') {\n      props.changeAbilityHighlight('able_area_selection');\n    } else {\n      props.changeAbilityHighlight('disable_area_selection');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"commentInput-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: comment,\n    onChange: function onChange(e) {\n      changeComment(e.target.value);\n      props.player === 'pause' && props.changePlayer();\n    },\n    placeholder: \"Leave your comment here...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Icon, {\n    className: \"icon_area_selection \".concat(props.isAbilityHighlight),\n    name: \"paint brush\",\n    size: \"large\",\n    onClick: changeAbilityHighlight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: 'send_comment ' + buttonStyle,\n    onClick: addComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Send\")));\n}\n\nexport default CommentInput;","map":{"version":3,"sources":["/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/Components/CommentInput/index.jsx"],"names":["React","useEffect","useState","Icon","CommentInput","props","comment","changeComment","buttonStyle","changeButtonStyle","addComment","coordinates","name","timeStamp","highlight","changeCoordinates","changeAbilityHighlight","isAbilityHighlight","e","target","value","player","changePlayer"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAO,aAAP;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,kBACUH,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,MACjBI,OADiB;AAAA,MACRC,aADQ;;AAAA,mBAEkBL,QAAQ,CAAC,SAAD,CAF1B;AAAA;AAAA,MAEjBM,WAFiB;AAAA,MAEJC,iBAFI,kBAIzB;;;AACAR,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGK,OAAH,EAAY;AACRG,MAAAA,iBAAiB,CAAC,MAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACH;AACJ,GANQ,EAMN,CAACH,OAAD,CANM,CAAT;;AAQA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAG,CAACJ,OAAJ,EAAa;;AACb,QAAGD,KAAK,CAACM,WAAN,CAAkB,CAAlB,CAAH,EAAyB;AAAE;AACvBN,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACbE,QAAAA,IAAI,EAAE,IADO;AAEbN,QAAAA,OAAO,EAAEA,OAFI;AAGbO,QAAAA,SAAS,EAAE,IAHE;AAIbC,QAAAA,SAAS,EAAET,KAAK,CAACM;AAJJ,OAAjB;AAMAN,MAAAA,KAAK,CAACU,iBAAN,CAAwB,EAAxB;AACH,KARD,MAQO;AACHV,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACbE,QAAAA,IAAI,EAAE,IADO;AAEbN,QAAAA,OAAO,EAAEA,OAFI;AAGbO,QAAAA,SAAS,EAAE;AAHE,OAAjB;AAKH;;AACDN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GAlBD,CAbyB,CAiCzB;;;AACA,MAAMS,sBAAsB,GAAI,SAA1BA,sBAA0B,GAAM;AAClC,QAAGX,KAAK,CAACY,kBAAN,KAA6B,wBAAhC,EAA0D;AACtDZ,MAAAA,KAAK,CAACW,sBAAN,CAA6B,qBAA7B;AACH,KAFD,MAEO;AACHX,MAAAA,KAAK,CAACW,sBAAN,CAA6B,wBAA7B;AACH;AACJ,GAND;;AAQA,SACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAEV,OADX;AAEI,IAAA,QAAQ,EAAE,kBAACY,CAAD,EAAO;AAACX,MAAAA,aAAa,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA+Bf,MAAAA,KAAK,CAACgB,MAAN,KAAiB,OAAjB,IAA4BhB,KAAK,CAACiB,YAAN,EAA5B;AAAiD,KAFtG;AAGI,IAAA,WAAW,EAAC,4BAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,SAAS,gCAAyBjB,KAAK,CAACY,kBAA/B,CAAf;AAAoE,IAAA,IAAI,EAAC,aAAzE;AAAuF,IAAA,IAAI,EAAC,OAA5F;AAAoG,IAAA,OAAO,EAAED,sBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAQ,IAAA,SAAS,EAAE,kBAAkBR,WAArC;AAAkD,IAAA,OAAO,EAAEE,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CADJ,CADJ;AAeH;;AAED,eAAeN,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Icon} from \"semantic-ui-react\";\nimport './style.css';\n\nfunction CommentInput(props) {\n    const [ comment, changeComment ] = useState('');\n    const [ buttonStyle, changeButtonStyle ] = useState('disable');\n\n    // depending on the contents of the input, add or remove the ability to send\n    useEffect(() => {\n        if(comment) {\n            changeButtonStyle('able')\n        } else {\n            changeButtonStyle('disable')\n        }\n    }, [comment]);\n\n    const addComment = () => {\n        if(!comment) return;\n        if(props.coordinates[0]) { // if the comment has a selection\n            props.addComment({\n                name: 'me',\n                comment: comment,\n                timeStamp: \"40\",\n                highlight: props.coordinates\n            });\n            props.changeCoordinates([])\n        } else {\n            props.addComment({\n                name: 'me',\n                comment: comment,\n                timeStamp: \"40\"\n            })\n        }\n        changeComment('')\n    };\n\n    // change the state of the selection icon depending on the click\n    const changeAbilityHighlight =  () => {\n        if(props.isAbilityHighlight === 'disable_area_selection') {\n            props.changeAbilityHighlight('able_area_selection')\n        } else {\n            props.changeAbilityHighlight('disable_area_selection')\n        }\n    };\n\n    return (\n        <div className='commentInput-wrapper'>\n            <div className='input-wrapper'>\n                <input\n                    value={comment}\n                    onChange={(e) => {changeComment(e.target.value); props.player === 'pause' && props.changePlayer()}}\n                    placeholder='Leave your comment here...'\n                />\n                <Icon className={`icon_area_selection ${props.isAbilityHighlight}`} name='paint brush' size='large' onClick={changeAbilityHighlight}/>\n                <button className={'send_comment ' + buttonStyle} onClick={addComment}>\n                    Send\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CommentInput;"]},"metadata":{},"sourceType":"module"}