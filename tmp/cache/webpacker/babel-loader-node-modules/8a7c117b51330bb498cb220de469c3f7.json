{"ast":null,"code":"var _jsxFileName = \"/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/Components/Video/index.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport '../../shared/styles/index.css';\nimport AvatarTimeline from \"./AvatarTimeline\";\nimport { highlightArea, convertToTime } from \"../../shared\";\nimport './style.css';\nvar Video = React.forwardRef(function (props, ref) {\n  var _useState = useState('00:00'),\n      _useState2 = _slicedToArray(_useState, 2),\n      duration = _useState2[0],\n      setDuration = _useState2[1]; // video playback\n\n\n  var progressUpdate = function progressUpdate() {\n    var time = Math.trunc(ref.current.currentTime);\n    props.setTimePassed(time);\n    var positionBar = document.getElementById(\"durationBar\");\n    positionBar.style.width = ref.current.currentTime / ref.current.duration * 100 + \"%\";\n  }; // ability to rewind to a specific place\n\n\n  var changeDuration = function changeDuration(e, data) {\n    document.getElementsByClassName('video-container')[0].innerHTML = '';\n    document.getElementsByClassName('video-container')[0].append(ref.current); // when click on a comment on the timeline\n\n    if (data && data.highlight) {\n      data.highlight.map(function (e) {\n        return highlightArea(e);\n      });\n      props.pausePlayer();\n    } // rewind video on time in comments\n\n\n    var len = e.pageX - document.getElementsByClassName('barContainer')[0].offsetLeft;\n    var difference = len / document.getElementsByClassName('barContainer')[0].offsetWidth;\n    ref.current.currentTime = difference * ref.current.duration;\n  }; // convert the coordinates of the selection from pixels to percent\n\n\n  var convertToPercent = function convertToPercent(e) {\n    var left = e.pageX - document.getElementsByClassName('video-container')[0].offsetLeft;\n    var top = e.pageY - document.getElementsByClassName('video-container')[0].offsetTop;\n    left = left / document.getElementsByClassName('video-container')[0].offsetWidth * 100;\n    top = top / document.getElementsByClassName('video-container')[0].offsetHeight * 100;\n    if (top > 90) return;\n    return {\n      pageX: left,\n      pageY: top\n    };\n  };\n\n  var write小oordinates = function write小oordinates(e) {\n    if (props.isAbilityHighlight === 'able_area_selection') {\n      e = convertToPercent(e);\n      e && highlightArea(e);\n      e && props.changeCoordinates([].concat(_toConsumableArray(props.coordinates), [{\n        pageX: e.pageX,\n        pageY: e.pageY\n      }]));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"video-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    ref: ref,\n    onClick: function onClick(e) {\n      return write小oordinates(e);\n    },\n    onTimeUpdate: progressUpdate,\n    onCanPlay: function onCanPlay(e) {\n      setDuration(e.target.duration);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"source\", {\n    src: \"./video/test.mp4\",\n    type: \"video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"barContainer\",\n    onClick: function onClick(e) {\n      return changeDuration(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"durationBar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"timeline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.comments[0] && props.comments.map(function (e) {\n    return React.createElement(AvatarTimeline, {\n      key: e.id,\n      changeDuration: changeDuration,\n      duration: duration,\n      data: e,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"player_control_panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    className: \"icon_player\",\n    name: props.player,\n    size: \"large\",\n    onClick: props.changePlayer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, convertToTime(props.timePassed), \" / \", convertToTime(duration)))));\n});\nexport default Video;","map":{"version":3,"sources":["/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/Components/Video/index.jsx"],"names":["React","useState","Icon","AvatarTimeline","highlightArea","convertToTime","Video","forwardRef","props","ref","duration","setDuration","progressUpdate","time","Math","trunc","current","currentTime","setTimePassed","positionBar","document","getElementById","style","width","changeDuration","e","data","getElementsByClassName","innerHTML","append","highlight","map","pausePlayer","len","pageX","offsetLeft","difference","offsetWidth","convertToPercent","left","top","pageY","offsetTop","offsetHeight","write小oordinates","isAbilityHighlight","changeCoordinates","coordinates","target","comments","id","player","changePlayer","timePassed"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Icon } from 'semantic-ui-react';\nimport '../../shared/styles/index.css';\nimport AvatarTimeline from \"./AvatarTimeline\";\nimport {highlightArea, convertToTime} from \"../../shared\";\nimport './style.css';\n\nconst Video = React.forwardRef((props, ref) => {\n    const [ duration, setDuration ] = useState('00:00');\n\n    // video playback\n    const progressUpdate = () => {\n        const time = Math.trunc(ref.current.currentTime);\n        props.setTimePassed(time);\n        const positionBar = document.getElementById(\"durationBar\");\n        positionBar.style.width = (ref.current.currentTime / ref.current.duration * 100) + \"%\";\n    };\n\n    // ability to rewind to a specific place\n    const changeDuration = (e, data) => {\n        document.getElementsByClassName('video-container')[0].innerHTML = '';\n        document.getElementsByClassName('video-container')[0].append(ref.current);\n        // when click on a comment on the timeline\n        if(data && data.highlight) {\n            data.highlight.map(e => highlightArea(e));\n            props.pausePlayer();\n        }\n        // rewind video on time in comments\n        let len = e.pageX - document.getElementsByClassName('barContainer')[0].offsetLeft;\n        let difference = (len/ document.getElementsByClassName('barContainer')[0].offsetWidth);\n        ref.current.currentTime = difference * ref.current.duration;\n    };\n\n    // convert the coordinates of the selection from pixels to percent\n    const convertToPercent = (e) => {\n        let left = e.pageX - document.getElementsByClassName('video-container')[0].offsetLeft;\n        let top = e.pageY - document.getElementsByClassName('video-container')[0].offsetTop;\n        left = left / document.getElementsByClassName('video-container')[0].offsetWidth * 100;\n        top = top / document.getElementsByClassName('video-container')[0].offsetHeight * 100;\n        if(top > 90) return;\n        return({pageX: left, pageY: top})\n    };\n\n    const write小oordinates = (e) => {\n        if(props.isAbilityHighlight === 'able_area_selection') {\n            e = convertToPercent(e);\n            e && highlightArea(e);\n            e && props.changeCoordinates([...props.coordinates, {pageX: e.pageX, pageY: e.pageY}])\n        }\n    };\n\n    return(\n        <div className='video-wrapper'>\n            <div className='player'>\n                <div className='video-container'>\n                    <video ref={ref}\n                           onClick={(e) => write小oordinates(e)}\n                           onTimeUpdate={progressUpdate}\n                           onCanPlay={(e) => {setDuration(e.target.duration)}}>\n                        <source src='./video/test.mp4' type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'/>\n                    </video>\n                </div>\n                <div className='barContainer' onClick={(e) => changeDuration(e)}>\n                    <div id=\"durationBar\"></div>\n                </div>\n                <div className='timeline'>\n                    {props.comments[0] &&\n                     props.comments.map(e => <AvatarTimeline\n                         key={e.id}\n                         changeDuration={changeDuration}\n                         duration={duration}\n                         data={e}\n                     />)}\n                </div>\n                <div className='player_control_panel'>\n                    <Icon className='icon_player' name={props.player} size='large' onClick={props.changePlayer}/>\n                    <div className='time'>{convertToTime(props.timePassed)} / {convertToTime(duration)}</div>\n                </div>\n            </div>\n        </div>\n    )\n});\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}