{"ast":null,"code":"var _jsxFileName = \"/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/Components/Comment/index.jsx\";\nimport React from 'react';\nimport { convertToTime } from '../../shared';\nimport { Icon } from 'semantic-ui-react';\nimport './style.css';\n\nfunction Comment(props) {\n  return React.createElement(\"div\", {\n    className: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment_header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"./img/\".concat(props.data.name, \".jpg\"),\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"commentator_name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.data.name), props.data.name === 'me' && React.createElement(Icon, {\n    className: \"icon_trash\",\n    name: \"trash alternate\",\n    size: \"small\",\n    onClick: function onClick() {\n      return props.deleteComment(props.data);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    onClick: function onClick() {\n      props.rewindVideo(props.data.timeStamp, props.data);\n    } //rewind to a specific comment\n    ,\n    className: \"time_stamp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, convertToTime(props.data.timeStamp), // if the comment is accompanied by a highlight, add a special icon\n  props.data.highlight && React.createElement(Icon, {\n    className: \"icon_brush\",\n    name: \"paint brush\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"comment_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.data.comment));\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/egorgorbik/Desktop/VideoTestRails/vironit/app/javascript/packs/Components/Comment/index.jsx"],"names":["React","convertToTime","Icon","Comment","props","data","name","deleteComment","rewindVideo","timeStamp","highlight","comment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,cAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,aAAP;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,kBAAWA,KAAK,CAACC,IAAN,CAAWC,IAAtB,SAA3B;AAA6D,IAAA,GAAG,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCF,KAAK,CAACC,IAAN,CAAWC,IAA9C,CAFJ,EAGKF,KAAK,CAACC,IAAN,CAAWC,IAAX,KAAoB,IAApB,IAA4B,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,IAAI,EAAC,iBAAlC;AAAoD,IAAA,IAAI,EAAC,OAAzD;AAAiE,IAAA,OAAO,EAAE;AAAA,aAAMF,KAAK,CAACG,aAAN,CAAoBH,KAAK,CAACC,IAA1B,CAAN;AAAA,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHjC,CADJ,EAMI;AACI,IAAA,OAAO,EAAE,mBAAM;AAACD,MAAAA,KAAK,CAACI,WAAN,CAAkBJ,KAAK,CAACC,IAAN,CAAWI,SAA7B,EAAwCL,KAAK,CAACC,IAA9C;AAAoD,KADxE,CAC0E;AAD1E;AAEI,IAAA,SAAS,EAAC,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKJ,aAAa,CAACG,KAAK,CAACC,IAAN,CAAWI,SAAZ,CAHlB,EAKQ;AACAL,EAAAA,KAAK,CAACC,IAAN,CAAWK,SAAX,IAAwB,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,IAAI,EAAC,aAAlC;AAAgD,IAAA,IAAI,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANhC,CANJ,EAeI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BN,KAAK,CAACC,IAAN,CAAWM,OAA1C,CAfJ,CADJ;AAmBH;;AAED,eAAeR,OAAf","sourcesContent":["import React from 'react';\nimport {convertToTime} from '../../shared';\nimport { Icon } from 'semantic-ui-react';\nimport './style.css';\n\nfunction Comment(props) {\n    return(\n        <div className='comment'>\n            <div className='comment_header'>\n                <img className='avatar' src={`./img/${props.data.name}.jpg`} alt='avatar'/>\n                <div className='commentator_name'>{props.data.name}</div>\n                {props.data.name === 'me' && <Icon className='icon_trash' name='trash alternate' size='small' onClick={() => props.deleteComment(props.data)}/>}\n            </div>\n            <div\n                onClick={() => {props.rewindVideo(props.data.timeStamp, props.data)}} //rewind to a specific comment\n                className='time_stamp'>\n                {convertToTime(props.data.timeStamp)}\n                {\n                    // if the comment is accompanied by a highlight, add a special icon\n                    props.data.highlight && <Icon className='icon_brush' name='paint brush' size='small'/>\n                }\n            </div>\n            <div className='comment_text'>{props.data.comment}</div>\n        </div>\n    )\n}\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}